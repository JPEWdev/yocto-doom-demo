---
version: 1

defaults:
  site: local
  mode: development

hooks:
  pre_init: |
      BB_ENV_EXTRAWHITE="${BB_ENV_EXTRAWHITE} \
          DOOM_GAMES \
          "

versions:
  gatesgarth:
    description: Yocto 3.2
    oeinit: "%{WHISK_PROJECT_ROOT}/gatesgarth/poky/oe-init-build-env"
    layers:
      - name: core
        paths:
          - "%{WHISK_PROJECT_ROOT}/gatesgarth/poky/meta"
          - "%{WHISK_PROJECT_ROOT}/gatesgarth/poky/meta-poky"
      - name: raspberrypi
        paths:
          - "%{WHISK_PROJECT_ROOT}/gatesgarth/meta-raspberrypi"
      - name: arm
        paths:
          - "%{WHISK_PROJECT_ROOT}/gatesgarth/meta-arm/meta-arm"
          - "%{WHISK_PROJECT_ROOT}/gatesgarth/meta-arm/meta-arm-toolchain"
      - name: rockchip
        paths:
          - "%{WHISK_PROJECT_ROOT}/gatesgarth/meta-rockchip"
      - name: doom
        paths:
          - "%{WHISK_PROJECT_ROOT}/meta-doom"
  hardknott:
    description: Yocto 3.3
    oeinit: "%{WHISK_PROJECT_ROOT}/hardknott/poky/oe-init-build-env"
    layers:
      - name: core
        paths:
          - "%{WHISK_PROJECT_ROOT}/hardknott/poky/meta"
          - "%{WHISK_PROJECT_ROOT}/hardknott/poky/meta-poky"
      - name: raspberrypi
        paths:
          - "%{WHISK_PROJECT_ROOT}/hardknott/meta-raspberrypi"
      - name: arm
        paths:
          - "%{WHISK_PROJECT_ROOT}/hardknott/meta-arm/meta-arm"
          - "%{WHISK_PROJECT_ROOT}/hardknott/meta-arm/meta-arm-toolchain"
      - name: rockchip
        paths:
          - "%{WHISK_PROJECT_ROOT}/hardknott/meta-rockchip"
      - name: doom
        paths:
          - "%{WHISK_PROJECT_ROOT}/meta-doom"

modes:
  development: {}

sites:
  local:
    description: A local machine

  aws:
    description: AWS CodeBuilder
    conf: |
      #INHERIT += "rm_work"
      SSTATE_DIR = "/mnt/yocto-cache/sstate"
      DL_DIR = "/mnt/yocto-cache/downloads"

      # For now. Need to setup a hash equivalence server in AWS
      BB_SIGNATURE_HANDLER = "OEBasicHash"

  tekton:
    description: Building in a Tekton pipeline
    conf: |
      # For now. Need to setup a hash equivalence server in Kubernetes
      BB_SIGNATURE_HANDLER = "OEBasicHash"

core:
  layers:
    - core
  conf: |
    DISTRO = "poky"
    INIT_MANAGER = "systemd"
    DISTRO_FEATURES_append = " pam wayland"
    DOOM_GAMES ??= "chexquest3 harmony delaweare adventuresofsquare"
    CORE_IMAGE_EXTRA_INSTALL = "${DOOM_GAMES}"

products:
  raspberrypi4:
    description: Raspberry Pi 4 (64-bit)
    default_version: gatesgarth
    layers:
      - core
      - raspberrypi
      - doom
    targets:
      - "mc:product-raspberrypi4:core-image-doom"
    conf: |
      MACHINE = "raspberrypi4-64"
      PREFERRED_RPROVIDER_zdoom = "lzdoom"

  raspberrypi3:
    description: Raspberry Pi 3 (64-bit)
    default_version: gatesgarth
    layers:
      - core
      - raspberrypi
      - doom
    targets:
      - "mc:product-raspberrypi3:core-image-doom"
    conf: |
      MACHINE = "raspberrypi3-64"
      PREFERRED_RPROVIDER_zdoom = "lzdoom"

  tinkerboard:
    description: ASuS TinkerBoard
    default_version: gatesgarth
    layers:
      - core
      - arm
      - rockchip
      - doom
    targets:
      - "mc:product-tinkerboard:core-image-doom"
    conf: |
      MACHINE = "tinker-board"
      PREFERRED_RPROVIDER_zdoom = "lzdoom"

  rockpi4:
    description: Rock Pi 4
    default_version: gatesgarth
    layers:
      - core
      - arm
      - rockchip
      - doom
    targets:
      - "mc:product-rockpi4:core-image-doom"
    conf: |
      MACHINE = "rock-pi-4"
      PREFERRED_RPROVIDER_zdoom = "lzdoom"

  qemux86-64:
    description: qemu x86_64
    default_version: gatesgarth
    layers:
      - core
      - doom
    targets:
      - "mc:product-qemux86-64:core-image-doom"
    conf: |
      MACHINE = "qemux86-64"
      PACKAGECONFIG_append_pn-qemu-system-native = " gtk+"
